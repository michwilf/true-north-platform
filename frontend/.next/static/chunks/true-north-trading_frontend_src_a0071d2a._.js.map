{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/MikeyW/true-north-trading/frontend/src/lib/api.ts"],"sourcesContent":["/**\n * API Service for True North Trading Platform\n *\n * Connects Next.js frontend to Python FastAPI backend\n */\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8002\";\n\n// Types\nexport interface MarketRegime {\n  regime: string;\n  trend: string;\n  sentiment: string;\n  strategy: string;\n  confidence: number;\n}\n\nexport interface Opportunity {\n  symbol: string;\n  title: string;\n  score: number;\n  reasoning: string;\n  entry_price?: number;\n  target_price?: number;\n  stop_loss?: number;\n  timeframe: string;\n  risk_level: string;\n}\n\nexport interface TraderSignal {\n  id: string;\n  trader_name: string;\n  symbol: string;\n  action: string;\n  confidence: number;\n  entry_price?: number;\n  time: string;\n  platform: string;\n}\n\nexport interface Alert {\n  id: string;\n  title: string;\n  message: string;\n  severity: string;\n  timestamp: string;\n  symbol?: string;\n}\n\nexport interface PortfolioMetrics {\n  total_value: number;\n  daily_pnl: number;\n  daily_pnl_percent: number;\n  active_positions: number;\n  win_rate: number;\n  total_trades: number;\n}\n\nexport interface Trader {\n  id: string;\n  name: string;\n  username: string;\n  platform: string;\n  verified: boolean;\n  followers: number;\n  win_rate: number;\n  total_trades: number;\n  strategy: string;\n}\n\n// API Client Class\nclass TradingAPI {\n  private baseURL: string;\n\n  constructor(baseURL: string = API_BASE_URL) {\n    this.baseURL = baseURL;\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options?: RequestInit\n  ): Promise<T> {\n    const url = `${this.baseURL}${endpoint}`;\n\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options?.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(`API request failed: ${endpoint}`, error);\n      throw error;\n    }\n  }\n\n  // Market Data\n  async getMarketRegime(): Promise<MarketRegime> {\n    return this.request<MarketRegime>(\"/api/market-regime\");\n  }\n\n  async getOpportunities(): Promise<Opportunity[]> {\n    return this.request<Opportunity[]>(\"/api/opportunities\");\n  }\n\n  async runDiscovery(): Promise<{\n    status: string;\n    message: string;\n    count: number;\n  }> {\n    return this.request(\"/api/run-discovery\", { method: \"POST\" });\n  }\n\n  // Trading Signals\n  async getTraderSignals(): Promise<TraderSignal[]> {\n    return this.request<TraderSignal[]>(\"/api/trader-signals\");\n  }\n\n  async getFollowedTraders(): Promise<Trader[]> {\n    return this.request<Trader[]>(\"/api/traders\");\n  }\n\n  // Alerts & Monitoring\n  async getAlerts(): Promise<Alert[]> {\n    return this.request<Alert[]>(\"/api/alerts\");\n  }\n\n  // Portfolio\n  async getPortfolioMetrics(): Promise<PortfolioMetrics> {\n    return this.request<PortfolioMetrics>(\"/api/portfolio-metrics\");\n  }\n\n  // Health Check\n  async healthCheck(): Promise<{ message: string; status: string }> {\n    return this.request(\"/\");\n  }\n}\n\n// Export singleton instance\nexport const api = new TradingAPI();\n\n// React Hooks for data fetching\nexport const useMarketRegime = () => {\n  const [data, setData] = useState<MarketRegime | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const result = await api.getMarketRegime();\n        setData(result);\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : \"Unknown error\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: () => fetchData() };\n};\n\n// Add React imports for hooks\nimport { useState, useEffect } from \"react\";\n\nexport const useOpportunities = () => {\n  const [data, setData] = useState<Opportunity[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getOpportunities();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n\nexport const useTraderSignals = () => {\n  const [data, setData] = useState<TraderSignal[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getTraderSignals();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n\nexport const usePortfolioMetrics = () => {\n  const [data, setData] = useState<PortfolioMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getPortfolioMetrics();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///Users/MikeyW/true-north-trading/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  useMarketRegime,\n  useOpportunities,\n  useTraderSignals,\n  usePortfolioMetrics,\n  api,\n} from \"@/lib/api\";\nimport {\n  ChartBarIcon,\n  CurrencyDollarIcon,\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n} from \"@heroicons/react/24/outline\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n} from \"recharts\";\nimport { motion } from \"framer-motion\";\n\n// Sample data - will be replaced with API calls\nconst portfolioData = [\n  { time: \"09:00\", value: 100000 },\n  { time: \"10:00\", value: 102000 },\n  { time: \"11:00\", value: 98000 },\n  { time: \"12:00\", value: 105000 },\n  { time: \"13:00\", value: 108000 },\n  { time: \"14:00\", value: 106000 },\n  { time: \"15:00\", value: 112000 },\n  { time: \"16:00\", value: 115000 },\n];\n\nconst topStocks = [\n  { symbol: \"AAPL\", price: 175.43, change: 2.34, changePercent: 1.35 },\n  { symbol: \"TSLA\", price: 248.5, change: -5.2, changePercent: -2.05 },\n  { symbol: \"NVDA\", price: 875.28, change: 12.45, changePercent: 1.44 },\n  { symbol: \"MSFT\", price: 378.85, change: 4.12, changePercent: 1.1 },\n];\n\nconst recentSignals = [\n  {\n    id: 1,\n    trader: \"Market Wizard\",\n    symbol: \"AAPL\",\n    action: \"LONG\",\n    confidence: 85,\n    time: \"2 min ago\",\n  },\n  {\n    id: 2,\n    trader: \"Crypto King\",\n    symbol: \"TSLA\",\n    action: \"SHORT\",\n    confidence: 72,\n    time: \"5 min ago\",\n  },\n  {\n    id: 3,\n    trader: \"Value Hunter\",\n    symbol: \"NVDA\",\n    action: \"LONG\",\n    confidence: 91,\n    time: \"8 min ago\",\n  },\n];\n\nexport default function Dashboard() {\n  // API hooks for real data\n  const { data: marketRegime, loading: regimeLoading } = useMarketRegime();\n  const {\n    data: opportunities,\n    loading: oppsLoading,\n    refetch: refetchOpps,\n  } = useOpportunities();\n  const { data: traderSignals, loading: signalsLoading } = useTraderSignals();\n  const { data: portfolioMetrics, loading: metricsLoading } =\n    usePortfolioMetrics();\n\n  const handleRunDiscovery = async () => {\n    try {\n      await api.runDiscovery();\n      refetchOpps(); // Refresh opportunities after discovery\n    } catch (error) {\n      console.error(\"Failed to run discovery:\", error);\n    }\n  };\n\n  return (\n    <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        {/* Market Regime Alert */}\n        <div className=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <ArrowTrendingUpIcon className=\"h-5 w-5 text-blue-600 mr-2\" />\n              <span className=\"text-sm font-medium text-blue-800\">\n                Current Market Regime:{\" \"}\n                <strong>\n                  {regimeLoading\n                    ? \"Loading...\"\n                    : marketRegime?.strategy || \"Unknown\"}\n                </strong>\n              </span>\n            </div>\n            <button\n              onClick={handleRunDiscovery}\n              className=\"px-3 py-1 text-xs font-medium text-blue-600 bg-blue-100 rounded-md hover:bg-blue-200\"\n            >\n              🔍 Run Discovery\n            </button>\n          </div>\n        </div>\n\n        {/* Key Metrics */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          {[\n            {\n              title: \"Portfolio Value\",\n              value: metricsLoading\n                ? \"Loading...\"\n                : `$${portfolioMetrics?.total_value.toLocaleString() || \"0\"}`,\n              change: metricsLoading\n                ? \"...\"\n                : `${portfolioMetrics?.daily_pnl_percent >= 0 ? \"+\" : \"\"}${\n                    portfolioMetrics?.daily_pnl_percent.toFixed(2) || \"0\"\n                  }%`,\n              positive: portfolioMetrics?.daily_pnl_percent >= 0,\n            },\n            {\n              title: \"Daily P&L\",\n              value: metricsLoading\n                ? \"Loading...\"\n                : `${portfolioMetrics?.daily_pnl >= 0 ? \"+\" : \"\"}$${\n                    portfolioMetrics?.daily_pnl.toLocaleString() || \"0\"\n                  }`,\n              change: metricsLoading\n                ? \"...\"\n                : `${portfolioMetrics?.daily_pnl_percent >= 0 ? \"+\" : \"\"}${\n                    portfolioMetrics?.daily_pnl_percent.toFixed(2) || \"0\"\n                  }%`,\n              positive: portfolioMetrics?.daily_pnl >= 0,\n            },\n            {\n              title: \"Active Positions\",\n              value: metricsLoading\n                ? \"Loading...\"\n                : `${portfolioMetrics?.active_positions || \"0\"}`,\n              change: \"+2\",\n              positive: true,\n            },\n            {\n              title: \"Win Rate\",\n              value: metricsLoading\n                ? \"Loading...\"\n                : `${portfolioMetrics?.win_rate.toFixed(1) || \"0\"}%`,\n              change: \"+1.2%\",\n              positive: true,\n            },\n          ].map((metric, index) => (\n            <motion.div\n              key={metric.title}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: index * 0.1 }}\n              className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">\n                    {metric.title}\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900\">\n                    {metric.value}\n                  </p>\n                </div>\n                <div\n                  className={`flex items-center ${\n                    metric.positive ? \"text-green-600\" : \"text-red-600\"\n                  }`}\n                >\n                  {metric.positive ? (\n                    <ArrowTrendingUpIcon className=\"h-4 w-4 mr-1\" />\n                  ) : (\n                    <ArrowTrendingDownIcon className=\"h-4 w-4 mr-1\" />\n                  )}\n                  <span className=\"text-sm font-medium\">{metric.change}</span>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Charts Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          {/* Portfolio Performance */}\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              Portfolio Performance\n            </h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <AreaChart data={portfolioData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis />\n                <Tooltip />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"value\"\n                  stroke=\"#3B82F6\"\n                  fill=\"#3B82F6\"\n                  fillOpacity={0.1}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n\n          {/* Top Movers */}\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              Top Movers\n            </h3>\n            <div className=\"space-y-4\">\n              {topStocks.map((stock) => (\n                <div\n                  key={stock.symbol}\n                  className=\"flex items-center justify-between\"\n                >\n                  <div>\n                    <p className=\"font-semibold text-gray-900\">\n                      {stock.symbol}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">${stock.price}</p>\n                  </div>\n                  <div\n                    className={`text-right ${\n                      stock.change >= 0 ? \"text-green-600\" : \"text-red-600\"\n                    }`}\n                  >\n                    <p className=\"font-semibold\">\n                      {stock.change >= 0 ? \"+\" : \"\"}\n                      {stock.change}\n                    </p>\n                    <p className=\"text-sm\">\n                      {stock.changePercent >= 0 ? \"+\" : \"\"}\n                      {stock.changePercent}%\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Signals */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              Recent Trading Signals\n            </h3>\n          </div>\n          <div className=\"p-6\">\n            <div className=\"space-y-4\">\n              {signalsLoading ? (\n                <div className=\"text-center py-4\">Loading signals...</div>\n              ) : traderSignals && traderSignals.length > 0 ? (\n                traderSignals.slice(0, 5).map((signal) => (\n                  <div\n                    key={signal.id}\n                    className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\n                  >\n                    <div className=\"flex items-center space-x-4\">\n                      <div\n                        className={`px-3 py-1 rounded-full text-xs font-medium ${\n                          signal.action === \"LONG\"\n                            ? \"bg-green-100 text-green-800\"\n                            : \"bg-red-100 text-red-800\"\n                        }`}\n                      >\n                        {signal.action}\n                      </div>\n                      <div>\n                        <p className=\"font-semibold text-gray-900\">\n                          {signal.symbol}\n                        </p>\n                        <p className=\"text-sm text-gray-600\">\n                          by {signal.trader_name}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-semibold text-gray-900\">\n                        {(signal.confidence * 100).toFixed(0)}% confidence\n                      </p>\n                      <p className=\"text-sm text-gray-600\">\n                        {new Date(signal.time).toLocaleTimeString()}\n                      </p>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"text-center py-4 text-gray-500\">\n                  No recent signals\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}