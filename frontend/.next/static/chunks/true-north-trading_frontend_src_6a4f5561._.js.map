{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/MikeyW/true-north-trading/frontend/src/lib/api.ts"],"sourcesContent":["/**\n * API Service for True North Trading Platform\n *\n * Connects Next.js frontend to Python FastAPI backend\n */\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8002\";\n\n// Types\nexport interface MarketRegime {\n  regime: string;\n  trend: string;\n  sentiment: string;\n  strategy: string;\n  confidence: number;\n}\n\nexport interface Opportunity {\n  symbol: string;\n  title: string;\n  score: number;\n  reasoning: string;\n  entry_price?: number;\n  target_price?: number;\n  stop_loss?: number;\n  timeframe: string;\n  risk_level: string;\n}\n\nexport interface TraderSignal {\n  id: string;\n  trader_name: string;\n  symbol: string;\n  action: string;\n  confidence: number;\n  entry_price?: number;\n  time: string;\n  platform: string;\n}\n\nexport interface Alert {\n  id: string;\n  title: string;\n  message: string;\n  severity: string;\n  timestamp: string;\n  symbol?: string;\n}\n\nexport interface PortfolioMetrics {\n  total_value: number;\n  daily_pnl: number;\n  daily_pnl_percent: number;\n  active_positions: number;\n  win_rate: number;\n  total_trades: number;\n}\n\nexport interface Trader {\n  id: string;\n  name: string;\n  username: string;\n  platform: string;\n  verified: boolean;\n  followers: number;\n  win_rate: number;\n  total_trades: number;\n  strategy: string;\n}\n\n// API Client Class\nclass TradingAPI {\n  private baseURL: string;\n\n  constructor(baseURL: string = API_BASE_URL) {\n    this.baseURL = baseURL;\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options?: RequestInit\n  ): Promise<T> {\n    const url = `${this.baseURL}${endpoint}`;\n\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options?.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(`API request failed: ${endpoint}`, error);\n      throw error;\n    }\n  }\n\n  // Market Data\n  async getMarketRegime(): Promise<MarketRegime> {\n    return this.request<MarketRegime>(\"/api/market-regime\");\n  }\n\n  async getOpportunities(): Promise<Opportunity[]> {\n    return this.request<Opportunity[]>(\"/api/opportunities\");\n  }\n\n  async runDiscovery(): Promise<{\n    status: string;\n    message: string;\n    count: number;\n  }> {\n    return this.request(\"/api/run-discovery\", { method: \"POST\" });\n  }\n\n  // Trading Signals\n  async getTraderSignals(): Promise<TraderSignal[]> {\n    return this.request<TraderSignal[]>(\"/api/trader-signals\");\n  }\n\n  async getFollowedTraders(): Promise<Trader[]> {\n    return this.request<Trader[]>(\"/api/traders\");\n  }\n\n  // Alerts & Monitoring\n  async getAlerts(): Promise<Alert[]> {\n    return this.request<Alert[]>(\"/api/alerts\");\n  }\n\n  // Portfolio\n  async getPortfolioMetrics(): Promise<PortfolioMetrics> {\n    return this.request<PortfolioMetrics>(\"/api/portfolio-metrics\");\n  }\n\n  // Health Check\n  async healthCheck(): Promise<{ message: string; status: string }> {\n    return this.request(\"/\");\n  }\n}\n\n// Export singleton instance\nexport const api = new TradingAPI();\n\n// React Hooks for data fetching\nexport const useMarketRegime = () => {\n  const [data, setData] = useState<MarketRegime | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const result = await api.getMarketRegime();\n        setData(result);\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : \"Unknown error\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: () => fetchData() };\n};\n\n// Add React imports for hooks\nimport { useState, useEffect } from \"react\";\n\nexport const useOpportunities = () => {\n  const [data, setData] = useState<Opportunity[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getOpportunities();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n\nexport const useTraderSignals = () => {\n  const [data, setData] = useState<TraderSignal[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getTraderSignals();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n\nexport const usePortfolioMetrics = () => {\n  const [data, setData] = useState<PortfolioMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getPortfolioMetrics();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///Users/MikeyW/true-north-trading/frontend/src/app/traders/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useTraderSignals, api } from \"@/lib/api\";\nimport {\n  UserGroupIcon,\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  CheckBadgeIcon,\n  ChartBarIcon,\n  ClockIcon,\n  ArrowPathIcon,\n} from \"@heroicons/react/24/outline\";\nimport { motion } from \"framer-motion\";\n\ninterface Trader {\n  id: string;\n  name: string;\n  username: string;\n  platform: string;\n  verified: boolean;\n  followers: number;\n  win_rate: number;\n  total_trades: number;\n  strategy: string;\n}\n\nexport default function TradersPage() {\n  const {\n    data: signals,\n    loading: signalsLoading,\n    refetch: refetchSignals,\n  } = useTraderSignals();\n  const [traders, setTraders] = useState<Trader[]>([]);\n  const [loadingTraders, setLoadingTraders] = useState(true);\n  const [selectedTrader, setSelectedTrader] = useState<string | null>(null);\n  const [timeFilter, setTimeFilter] = useState<string>(\"24h\");\n\n  useEffect(() => {\n    loadTraders();\n  }, []);\n\n  const loadTraders = async () => {\n    try {\n      setLoadingTraders(true);\n      const response = await fetch(\"http://localhost:8002/api/traders\");\n      const data = await response.json();\n      setTraders(data);\n    } catch (error) {\n      console.error(\"Failed to load traders:\", error);\n    } finally {\n      setLoadingTraders(false);\n    }\n  };\n\n  const filteredSignals = signals?.filter((signal) => {\n    if (selectedTrader && signal.trader_name !== selectedTrader) return false;\n\n    const signalTime = new Date(signal.time).getTime();\n    const now = Date.now();\n    const hoursDiff = (now - signalTime) / (1000 * 60 * 60);\n\n    if (timeFilter === \"1h\" && hoursDiff > 1) return false;\n    if (timeFilter === \"24h\" && hoursDiff > 24) return false;\n    if (timeFilter === \"7d\" && hoursDiff > 168) return false;\n\n    return true;\n  });\n\n  const getPlatformBadgeColor = (platform: string) => {\n    switch (platform.toLowerCase()) {\n      case \"twitter\":\n        return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"reddit\":\n        return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case \"discord\":\n        return \"bg-purple-100 text-purple-800 border-purple-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getActionBadgeColor = (action: string) => {\n    switch (action.toUpperCase()) {\n      case \"LONG\":\n      case \"BUY\":\n        return \"bg-green-100 text-green-800\";\n      case \"SHORT\":\n      case \"SELL\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Trader Following\n              </h1>\n              <p className=\"mt-1 text-sm text-gray-600\">\n                Track and analyze successful traders across multiple platforms\n              </p>\n            </div>\n            <button\n              onClick={() => {\n                refetchSignals();\n                loadTraders();\n              }}\n              disabled={signalsLoading || loadingTraders}\n              className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n            >\n              <ArrowPathIcon\n                className={`h-5 w-5 mr-2 ${\n                  signalsLoading || loadingTraders ? \"animate-spin\" : \"\"\n                }`}\n              />\n              Refresh\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Traders List */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <h2 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n                  <UserGroupIcon className=\"h-5 w-5 mr-2\" />\n                  Followed Traders ({traders.length})\n                </h2>\n              </div>\n              <div className=\"divide-y divide-gray-200 max-h-[600px] overflow-y-auto\">\n                {loadingTraders ? (\n                  <div className=\"p-6 text-center\">\n                    <ArrowPathIcon className=\"h-8 w-8 text-blue-600 animate-spin mx-auto\" />\n                  </div>\n                ) : traders.length > 0 ? (\n                  traders.map((trader, index) => (\n                    <motion.button\n                      key={trader.id}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.3, delay: index * 0.05 }}\n                      onClick={() =>\n                        setSelectedTrader(\n                          selectedTrader === trader.name ? null : trader.name\n                        )\n                      }\n                      className={`w-full text-left px-6 py-4 hover:bg-gray-50 transition-colors ${\n                        selectedTrader === trader.name ? \"bg-blue-50\" : \"\"\n                      }`}\n                    >\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-1\">\n                            <p className=\"font-semibold text-gray-900\">\n                              {trader.name}\n                            </p>\n                            {trader.verified && (\n                              <CheckBadgeIcon className=\"h-4 w-4 text-blue-600\" />\n                            )}\n                          </div>\n                          <p className=\"text-sm text-gray-600 mb-2\">\n                            @{trader.username}\n                          </p>\n                          <div className=\"flex items-center space-x-2\">\n                            <span\n                              className={`px-2 py-0.5 rounded text-xs font-medium border ${getPlatformBadgeColor(\n                                trader.platform\n                              )}`}\n                            >\n                              {trader.platform}\n                            </span>\n                            <span className=\"text-xs text-gray-500\">\n                              {trader.followers.toLocaleString()} followers\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"mt-3 grid grid-cols-2 gap-2\">\n                        <div className=\"bg-gray-50 rounded px-2 py-1\">\n                          <p className=\"text-xs text-gray-600\">Win Rate</p>\n                          <p className=\"text-sm font-semibold text-gray-900\">\n                            {trader.win_rate.toFixed(1)}%\n                          </p>\n                        </div>\n                        <div className=\"bg-gray-50 rounded px-2 py-1\">\n                          <p className=\"text-xs text-gray-600\">Trades</p>\n                          <p className=\"text-sm font-semibold text-gray-900\">\n                            {trader.total_trades}\n                          </p>\n                        </div>\n                      </div>\n                    </motion.button>\n                  ))\n                ) : (\n                  <div className=\"p-6 text-center text-gray-500\">\n                    <UserGroupIcon className=\"h-12 w-12 mx-auto mb-3 text-gray-400\" />\n                    <p>No traders followed yet</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Signals Feed */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <h2 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n                    <ChartBarIcon className=\"h-5 w-5 mr-2\" />\n                    Trading Signals\n                    {selectedTrader && (\n                      <span className=\"ml-2 text-sm font-normal text-gray-600\">\n                        from {selectedTrader}\n                      </span>\n                    )}\n                  </h2>\n                  <div className=\"flex space-x-2\">\n                    {[\"1h\", \"24h\", \"7d\"].map((filter) => (\n                      <button\n                        key={filter}\n                        onClick={() => setTimeFilter(filter)}\n                        className={`px-3 py-1 rounded text-sm font-medium ${\n                          timeFilter === filter\n                            ? \"bg-blue-100 text-blue-700\"\n                            : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\n                        }`}\n                      >\n                        {filter}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"divide-y divide-gray-200 max-h-[600px] overflow-y-auto\">\n                {signalsLoading ? (\n                  <div className=\"p-8 text-center\">\n                    <ArrowPathIcon className=\"h-8 w-8 text-blue-600 animate-spin mx-auto mb-3\" />\n                    <p className=\"text-gray-600\">Loading signals...</p>\n                  </div>\n                ) : filteredSignals && filteredSignals.length > 0 ? (\n                  filteredSignals.map((signal, index) => (\n                    <motion.div\n                      key={signal.id}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3, delay: index * 0.05 }}\n                      className=\"px-6 py-4 hover:bg-gray-50\"\n                    >\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-3 mb-2\">\n                            <span\n                              className={`px-3 py-1 rounded-full text-sm font-semibold ${getActionBadgeColor(\n                                signal.action\n                              )}`}\n                            >\n                              {signal.action}\n                            </span>\n                            <h3 className=\"text-xl font-bold text-gray-900\">\n                              {signal.symbol}\n                            </h3>\n                            {signal.entry_price && (\n                              <span className=\"text-sm text-gray-600\">\n                                @ ${signal.entry_price.toFixed(2)}\n                              </span>\n                            )}\n                          </div>\n\n                          <div className=\"flex items-center space-x-4 mb-2\">\n                            <p className=\"text-sm font-medium text-gray-700\">\n                              by {signal.trader_name}\n                            </p>\n                            <span\n                              className={`px-2 py-0.5 rounded text-xs font-medium border ${getPlatformBadgeColor(\n                                signal.platform\n                              )}`}\n                            >\n                              {signal.platform}\n                            </span>\n                          </div>\n\n                          <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                            <div className=\"flex items-center\">\n                              <ClockIcon className=\"h-4 w-4 mr-1\" />\n                              {new Date(signal.time).toLocaleString()}\n                            </div>\n                            <div className=\"flex items-center\">\n                              <ChartBarIcon className=\"h-4 w-4 mr-1\" />\n                              {(signal.confidence * 100).toFixed(0)}% confidence\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Confidence Bar */}\n                        <div className=\"ml-4\">\n                          <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                            <div\n                              className={`h-2 rounded-full ${\n                                signal.confidence >= 0.8\n                                  ? \"bg-green-600\"\n                                  : signal.confidence >= 0.6\n                                  ? \"bg-yellow-600\"\n                                  : \"bg-red-600\"\n                              }`}\n                              style={{ width: `${signal.confidence * 100}%` }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </motion.div>\n                  ))\n                ) : (\n                  <div className=\"p-12 text-center text-gray-500\">\n                    <ChartBarIcon className=\"h-16 w-16 mx-auto mb-4 text-gray-400\" />\n                    <p className=\"font-medium\">No signals found</p>\n                    <p className=\"text-sm mt-1\">\n                      {selectedTrader\n                        ? \"Try selecting a different trader or time range\"\n                        : \"Start following traders to see their signals\"}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}