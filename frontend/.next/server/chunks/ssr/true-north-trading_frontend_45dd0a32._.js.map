{"version":3,"sources":["turbopack:///[project]/true-north-trading/frontend/node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","turbopack:///[project]/true-north-trading/frontend/node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","turbopack:///[project]/true-north-trading/frontend/node_modules/@heroicons/react/24/outline/esm/CheckBadgeIcon.js","turbopack:///[project]/true-north-trading/frontend/src/app/leaderboard/page.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckBadgeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 0 1-1.043 3.296 3.745 3.745 0 0 1-3.296 1.043A3.745 3.745 0 0 1 12 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 0 1-3.296-1.043 3.745 3.745 0 0 1-1.043-3.296A3.745 3.745 0 0 1 3 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 0 1 1.043-3.296 3.746 3.746 0 0 1 3.296-1.043A3.746 3.746 0 0 1 12 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 0 1 3.296 1.043 3.746 3.746 0 0 1 1.043 3.296A3.745 3.745 0 0 1 21 12Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckBadgeIcon);\nexport default ForwardRef;","\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  TrophyIcon,\n  UserGroupIcon,\n  ChartBarIcon,\n  CheckBadgeIcon,\n  ArrowPathIcon,\n  ArrowTrendingUpIcon,\n  ClockIcon,\n} from \"@heroicons/react/24/outline\";\nimport { motion } from \"framer-motion\";\n\ninterface TraderLeaderboard {\n  trader_name: string;\n  platform: string;\n  win_rate: number;\n  avg_return: number;\n  total_trades: number;\n  sharpe_ratio: number;\n  max_drawdown: number;\n  followers: number;\n  verified: boolean;\n  strategy: string;\n  performance_score: number;\n}\n\ninterface LeaderboardData {\n  leaderboard: TraderLeaderboard[];\n  total_traders: number;\n  analysis_timestamp: string;\n}\n\nexport default function TraderLeaderboardPage() {\n  const [leaderboardData, setLeaderboardData] =\n    useState<LeaderboardData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [sortBy, setSortBy] = useState<string>(\"performance_score\");\n\n  useEffect(() => {\n    loadLeaderboardData();\n\n    // Auto-refresh every 15 minutes\n    const interval = setInterval(loadLeaderboardData, 900000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const loadLeaderboardData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(\n        \"http://localhost:8002/api/trader-leaderboard\"\n      );\n      const data = await response.json();\n      setLeaderboardData(data);\n    } catch (err) {\n      setError(\"Failed to load trader leaderboard\");\n      console.error(\"Error loading leaderboard:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getPlatformBadgeColor = (platform: string) => {\n    switch (platform.toLowerCase()) {\n      case \"twitter\":\n        return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"reddit\":\n        return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case \"discord\":\n        return \"bg-purple-100 text-purple-800 border-purple-200\";\n      case \"stocktwits\":\n        return \"bg-green-100 text-green-800 border-green-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getStrategyBadgeColor = (strategy: string) => {\n    switch (strategy.toLowerCase()) {\n      case \"swing_trading\":\n        return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"day_trading\":\n        return \"bg-red-100 text-red-800 border-red-200\";\n      case \"momentum\":\n        return \"bg-green-100 text-green-800 border-green-200\";\n      case \"value_investing\":\n        return \"bg-purple-100 text-purple-800 border-purple-200\";\n      case \"options\":\n        return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getRankIcon = (rank: number) => {\n    switch (rank) {\n      case 1:\n        return <TrophyIcon className=\"h-8 w-8 text-yellow-500\" />;\n      case 2:\n        return <TrophyIcon className=\"h-7 w-7 text-gray-400\" />;\n      case 3:\n        return <TrophyIcon className=\"h-6 w-6 text-amber-600\" />;\n      default:\n        return (\n          <div className=\"h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center text-gray-600 font-bold text-sm\">\n            {rank}\n          </div>\n        );\n    }\n  };\n\n  const getPerformanceScoreColor = (score: number) => {\n    if (score >= 90) return \"text-green-600\";\n    if (score >= 80) return \"text-blue-600\";\n    if (score >= 70) return \"text-yellow-600\";\n    return \"text-red-600\";\n  };\n\n  const sortedTraders =\n    leaderboardData?.leaderboard.sort((a, b) => {\n      switch (sortBy) {\n        case \"win_rate\":\n          return b.win_rate - a.win_rate;\n        case \"avg_return\":\n          return b.avg_return - a.avg_return;\n        case \"sharpe_ratio\":\n          return b.sharpe_ratio - a.sharpe_ratio;\n        case \"total_trades\":\n          return b.total_trades - a.total_trades;\n        case \"followers\":\n          return b.followers - a.followers;\n        default:\n          return b.performance_score - a.performance_score;\n      }\n    }) || [];\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <ArrowPathIcon className=\"h-12 w-12 text-blue-600 animate-spin mx-auto mb-4\" />\n          <p className=\"text-gray-600\">Loading trader leaderboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !leaderboardData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <UserGroupIcon className=\"h-12 w-12 text-red-600 mx-auto mb-4\" />\n          <p className=\"text-red-800 font-medium\">Failed to load leaderboard</p>\n          <button\n            onClick={loadLeaderboardData}\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Trader Leaderboard\n              </h1>\n              <p className=\"mt-1 text-sm text-gray-600\">\n                Top performing traders ranked by comprehensive performance\n                metrics\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-sm text-gray-500\">\n                <ClockIcon className=\"h-4 w-4 inline mr-1\" />\n                Updated:{\" \"}\n                {new Date(\n                  leaderboardData.analysis_timestamp\n                ).toLocaleTimeString()}\n              </div>\n              <button\n                onClick={loadLeaderboardData}\n                disabled={loading}\n                className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                <ArrowPathIcon\n                  className={`h-5 w-5 mr-2 ${loading ? \"animate-spin\" : \"\"}`}\n                />\n                Refresh\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Stats Overview */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8\"\n        >\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n            <div className=\"text-center\">\n              <UserGroupIcon className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\n              <p className=\"text-2xl font-bold text-gray-900\">\n                {leaderboardData.total_traders}\n              </p>\n              <p className=\"text-sm text-gray-600\">Total Traders</p>\n            </div>\n            <div className=\"text-center\">\n              <ChartBarIcon className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n              <p className=\"text-2xl font-bold text-gray-900\">\n                {sortedTraders.length > 0\n                  ? sortedTraders[0].win_rate.toFixed(1)\n                  : \"0\"}\n                %\n              </p>\n              <p className=\"text-sm text-gray-600\">Top Win Rate</p>\n            </div>\n            <div className=\"text-center\">\n              <ArrowTrendingUpIcon className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n              <p className=\"text-2xl font-bold text-gray-900\">\n                {sortedTraders.length > 0\n                  ? sortedTraders[0].avg_return.toFixed(1)\n                  : \"0\"}\n                %\n              </p>\n              <p className=\"text-sm text-gray-600\">Top Avg Return</p>\n            </div>\n            <div className=\"text-center\">\n              <TrophyIcon className=\"h-8 w-8 text-yellow-600 mx-auto mb-2\" />\n              <p className=\"text-2xl font-bold text-gray-900\">\n                {sortedTraders.length > 0\n                  ? sortedTraders[0].performance_score.toFixed(0)\n                  : \"0\"}\n              </p>\n              <p className=\"text-sm text-gray-600\">Top Score</p>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Sort Controls */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Sort by:</h3>\n            <select\n              value={sortBy}\n              onChange={(e) => setSortBy(e.target.value)}\n              className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"performance_score\">Performance Score</option>\n              <option value=\"win_rate\">Win Rate</option>\n              <option value=\"avg_return\">Average Return</option>\n              <option value=\"sharpe_ratio\">Sharpe Ratio</option>\n              <option value=\"total_trades\">Total Trades</option>\n              <option value=\"followers\">Followers</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Leaderboard */}\n        <div className=\"space-y-4\">\n          {sortedTraders.map((trader, index) => (\n            <motion.div\n              key={trader.trader_name}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.05 }}\n              className={`bg-white rounded-lg shadow-sm border-2 p-6 ${\n                index < 3\n                  ? \"border-yellow-200 bg-gradient-to-r from-yellow-50 to-white\"\n                  : \"border-gray-200\"\n              }`}\n            >\n              <div className=\"flex items-center justify-between\">\n                {/* Left side - Rank and Trader Info */}\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex-shrink-0\">{getRankIcon(index + 1)}</div>\n\n                  <div>\n                    <div className=\"flex items-center space-x-3 mb-2\">\n                      <h3 className=\"text-xl font-bold text-gray-900\">\n                        {trader.trader_name}\n                      </h3>\n                      {trader.verified && (\n                        <CheckBadgeIcon className=\"h-5 w-5 text-blue-600\" />\n                      )}\n                    </div>\n\n                    <div className=\"flex items-center space-x-3\">\n                      <span\n                        className={`px-2 py-1 rounded-full text-xs font-medium border ${getPlatformBadgeColor(\n                          trader.platform\n                        )}`}\n                      >\n                        {trader.platform}\n                      </span>\n                      <span\n                        className={`px-2 py-1 rounded-full text-xs font-medium border ${getStrategyBadgeColor(\n                          trader.strategy\n                        )}`}\n                      >\n                        {trader.strategy.replace(\"_\", \" \").toUpperCase()}\n                      </span>\n                      <span className=\"text-sm text-gray-600\">\n                        {trader.followers.toLocaleString()} followers\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Right side - Performance Score */}\n                <div className=\"text-center\">\n                  <div\n                    className={`text-3xl font-bold ${getPerformanceScoreColor(\n                      trader.performance_score\n                    )}`}\n                  >\n                    {trader.performance_score.toFixed(0)}\n                  </div>\n                  <p className=\"text-sm text-gray-600\">Performance Score</p>\n                </div>\n              </div>\n\n              {/* Performance Metrics Grid */}\n              <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 mt-6 pt-6 border-t border-gray-200\">\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Win Rate</p>\n                  <p className=\"text-lg font-bold text-green-600\">\n                    {trader.win_rate.toFixed(1)}%\n                  </p>\n                </div>\n\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Avg Return</p>\n                  <p className=\"text-lg font-bold text-blue-600\">\n                    {trader.avg_return.toFixed(1)}%\n                  </p>\n                </div>\n\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Sharpe Ratio</p>\n                  <p className=\"text-lg font-bold text-purple-600\">\n                    {trader.sharpe_ratio.toFixed(2)}\n                  </p>\n                </div>\n\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Max Drawdown</p>\n                  <p className=\"text-lg font-bold text-red-600\">\n                    {trader.max_drawdown.toFixed(1)}%\n                  </p>\n                </div>\n\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Total Trades</p>\n                  <p className=\"text-lg font-bold text-gray-900\">\n                    {trader.total_trades}\n                  </p>\n                </div>\n              </div>\n\n              {/* Performance Bar */}\n              <div className=\"mt-4\">\n                <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                  <span>Performance Score</span>\n                  <span>{trader.performance_score.toFixed(0)}/100</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div\n                    className={`h-2 rounded-full ${\n                      trader.performance_score >= 90\n                        ? \"bg-green-600\"\n                        : trader.performance_score >= 80\n                        ? \"bg-blue-600\"\n                        : trader.performance_score >= 70\n                        ? \"bg-yellow-600\"\n                        : \"bg-red-600\"\n                    }`}\n                    style={{ width: `${trader.performance_score}%` }}\n                  />\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Performance Legend */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.5 }}\n          className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mt-8\"\n        >\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Performance Score Legend\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-4 h-4 bg-green-600 rounded\"></div>\n              <span className=\"text-sm text-gray-700\">90-100: Exceptional</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-4 h-4 bg-blue-600 rounded\"></div>\n              <span className=\"text-sm text-gray-700\">80-89: Excellent</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-4 h-4 bg-yellow-600 rounded\"></div>\n              <span className=\"text-sm text-gray-700\">70-79: Good</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-4 h-4 bg-red-600 rounded\"></div>\n              <span className=\"text-sm text-gray-700\">\n                &lt;70: Needs Improvement\n              </span>\n            </div>\n          </div>\n          <p className=\"text-sm text-gray-600 mt-4\">\n            Performance score is calculated based on win rate, average return,\n            Sharpe ratio, and risk management metrics.\n          </p>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,2]}