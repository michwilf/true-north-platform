{"version":3,"sources":["turbopack:///[project]/true-north-trading/frontend/node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","turbopack:///[project]/true-north-trading/frontend/node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","turbopack:///[project]/true-north-trading/frontend/src/lib/api.ts","turbopack:///[project]/true-north-trading/frontend/node_modules/@heroicons/react/24/outline/esm/CheckBadgeIcon.js","turbopack:///[project]/true-north-trading/frontend/src/app/traders/page.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","/**\n * API Service for True North Trading Platform\n *\n * Connects Next.js frontend to Python FastAPI backend\n */\n\nimport { useState, useEffect } from \"react\";\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8002\";\n\n// Types\nexport interface MarketRegime {\n  regime: string;\n  trend: string;\n  sentiment: string;\n  strategy: string;\n  confidence: number;\n}\n\nexport interface Opportunity {\n  symbol: string;\n  title: string;\n  score: number;\n  reasoning: string;\n  entry_price?: number;\n  target_price?: number;\n  stop_loss?: number;\n  timeframe: string;\n  risk_level: string;\n}\n\nexport interface TraderSignal {\n  id: string;\n  trader_name: string;\n  symbol: string;\n  action: string;\n  confidence: number;\n  entry_price?: number;\n  time: string;\n  platform: string;\n}\n\nexport interface Alert {\n  id: string;\n  title: string;\n  message: string;\n  severity: string;\n  timestamp: string;\n  symbol?: string;\n}\n\nexport interface PortfolioMetrics {\n  total_value: number;\n  daily_pnl: number;\n  daily_pnl_percent: number;\n  active_positions: number;\n  win_rate: number;\n  total_trades: number;\n}\n\nexport interface Trader {\n  id: string;\n  name: string;\n  username: string;\n  platform: string;\n  verified: boolean;\n  followers: number;\n  win_rate: number;\n  total_trades: number;\n  strategy: string;\n}\n\n// API Client Class\nclass TradingAPI {\n  private baseURL: string;\n\n  constructor(baseURL: string = API_BASE_URL) {\n    this.baseURL = baseURL;\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options?: RequestInit\n  ): Promise<T> {\n    const url = `${this.baseURL}${endpoint}`;\n\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options?.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(`API request failed: ${endpoint}`, error);\n      throw error;\n    }\n  }\n\n  // Market Data\n  async getMarketRegime(): Promise<MarketRegime> {\n    return this.request<MarketRegime>(\"/api/market-regime\");\n  }\n\n  async getOpportunities(): Promise<Opportunity[]> {\n    return this.request<Opportunity[]>(\"/api/opportunities\");\n  }\n\n  async runDiscovery(): Promise<{\n    status: string;\n    message: string;\n    count: number;\n  }> {\n    return this.request(\"/api/run-discovery\", { method: \"POST\" });\n  }\n\n  // Trading Signals\n  async getTraderSignals(): Promise<TraderSignal[]> {\n    return this.request<TraderSignal[]>(\"/api/trader-signals\");\n  }\n\n  async getFollowedTraders(): Promise<Trader[]> {\n    return this.request<Trader[]>(\"/api/traders\");\n  }\n\n  // Alerts & Monitoring\n  async getAlerts(): Promise<Alert[]> {\n    return this.request<Alert[]>(\"/api/alerts\");\n  }\n\n  // Portfolio\n  async getPortfolioMetrics(): Promise<PortfolioMetrics> {\n    return this.request<PortfolioMetrics>(\"/api/portfolio-metrics\");\n  }\n\n  // Health Check\n  async healthCheck(): Promise<{ message: string; status: string }> {\n    return this.request(\"/\");\n  }\n}\n\n// Export singleton instance\nexport const api = new TradingAPI();\n\n// React Hooks for data fetching\nexport const useMarketRegime = () => {\n  const [data, setData] = useState<MarketRegime | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getMarketRegime();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n\nexport const useOpportunities = () => {\n  const [data, setData] = useState<Opportunity[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getOpportunities();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n\nexport const useTraderSignals = () => {\n  const [data, setData] = useState<TraderSignal[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getTraderSignals();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n\nexport const usePortfolioMetrics = () => {\n  const [data, setData] = useState<PortfolioMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await api.getPortfolioMetrics();\n      setData(result);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, refetch: fetchData };\n};\n","import * as React from \"react\";\nfunction CheckBadgeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 0 1-1.043 3.296 3.745 3.745 0 0 1-3.296 1.043A3.745 3.745 0 0 1 12 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 0 1-3.296-1.043 3.745 3.745 0 0 1-1.043-3.296A3.745 3.745 0 0 1 3 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 0 1 1.043-3.296 3.746 3.746 0 0 1 3.296-1.043A3.746 3.746 0 0 1 12 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 0 1 3.296 1.043 3.746 3.746 0 0 1 1.043 3.296A3.745 3.745 0 0 1 21 12Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckBadgeIcon);\nexport default ForwardRef;","\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useTraderSignals } from \"@/lib/api\";\nimport {\n  UserGroupIcon,\n  CheckBadgeIcon,\n  ChartBarIcon,\n  ClockIcon,\n  ArrowPathIcon,\n} from \"@heroicons/react/24/outline\";\nimport { motion } from \"framer-motion\";\n\ninterface Trader {\n  id: string;\n  name: string;\n  username: string;\n  platform: string;\n  verified: boolean;\n  followers: number;\n  win_rate: number;\n  total_trades: number;\n  strategy: string;\n}\n\nexport default function TradersPage() {\n  const {\n    data: signals,\n    loading: signalsLoading,\n    refetch: refetchSignals,\n  } = useTraderSignals();\n  const [traders, setTraders] = useState<Trader[]>([]);\n  const [loadingTraders, setLoadingTraders] = useState(true);\n  const [selectedTrader, setSelectedTrader] = useState<string | null>(null);\n  const [timeFilter, setTimeFilter] = useState<string>(\"24h\");\n\n  useEffect(() => {\n    loadTraders();\n  }, []);\n\n  const loadTraders = async () => {\n    try {\n      setLoadingTraders(true);\n      const response = await fetch(\"http://localhost:8002/api/traders\");\n      const data = await response.json();\n      setTraders(data);\n    } catch (error) {\n      console.error(\"Failed to load traders:\", error);\n    } finally {\n      setLoadingTraders(false);\n    }\n  };\n\n  const filteredSignals = signals?.filter((signal) => {\n    if (selectedTrader && signal.trader_name !== selectedTrader) return false;\n\n    const signalTime = new Date(signal.time).getTime();\n    const now = Date.now();\n    const hoursDiff = (now - signalTime) / (1000 * 60 * 60);\n\n    if (timeFilter === \"1h\" && hoursDiff > 1) return false;\n    if (timeFilter === \"24h\" && hoursDiff > 24) return false;\n    if (timeFilter === \"7d\" && hoursDiff > 168) return false;\n\n    return true;\n  });\n\n  const getPlatformBadgeColor = (platform: string) => {\n    switch (platform.toLowerCase()) {\n      case \"twitter\":\n        return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"reddit\":\n        return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case \"discord\":\n        return \"bg-purple-100 text-purple-800 border-purple-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getActionBadgeColor = (action: string) => {\n    switch (action.toUpperCase()) {\n      case \"LONG\":\n      case \"BUY\":\n        return \"bg-green-100 text-green-800\";\n      case \"SHORT\":\n      case \"SELL\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Trader Following\n              </h1>\n              <p className=\"mt-1 text-sm text-gray-600\">\n                Track and analyze successful traders across multiple platforms\n              </p>\n            </div>\n            <button\n              onClick={() => {\n                refetchSignals();\n                loadTraders();\n              }}\n              disabled={signalsLoading || loadingTraders}\n              className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n            >\n              <ArrowPathIcon\n                className={`h-5 w-5 mr-2 ${\n                  signalsLoading || loadingTraders ? \"animate-spin\" : \"\"\n                }`}\n              />\n              Refresh\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Traders List */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <h2 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n                  <UserGroupIcon className=\"h-5 w-5 mr-2\" />\n                  Followed Traders ({traders.length})\n                </h2>\n              </div>\n              <div className=\"divide-y divide-gray-200 max-h-[600px] overflow-y-auto\">\n                {loadingTraders ? (\n                  <div className=\"p-6 text-center\">\n                    <ArrowPathIcon className=\"h-8 w-8 text-blue-600 animate-spin mx-auto\" />\n                  </div>\n                ) : traders.length > 0 ? (\n                  traders.map((trader, index) => (\n                    <motion.button\n                      key={trader.id}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.3, delay: index * 0.05 }}\n                      onClick={() =>\n                        setSelectedTrader(\n                          selectedTrader === trader.name ? null : trader.name\n                        )\n                      }\n                      className={`w-full text-left px-6 py-4 hover:bg-gray-50 transition-colors ${\n                        selectedTrader === trader.name ? \"bg-blue-50\" : \"\"\n                      }`}\n                    >\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-1\">\n                            <p className=\"font-semibold text-gray-900\">\n                              {trader.name}\n                            </p>\n                            {trader.verified && (\n                              <CheckBadgeIcon className=\"h-4 w-4 text-blue-600\" />\n                            )}\n                          </div>\n                          <p className=\"text-sm text-gray-600 mb-2\">\n                            @{trader.username}\n                          </p>\n                          <div className=\"flex items-center space-x-2\">\n                            <span\n                              className={`px-2 py-0.5 rounded text-xs font-medium border ${getPlatformBadgeColor(\n                                trader.platform\n                              )}`}\n                            >\n                              {trader.platform}\n                            </span>\n                            <span className=\"text-xs text-gray-500\">\n                              {trader.followers.toLocaleString()} followers\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"mt-3 grid grid-cols-2 gap-2\">\n                        <div className=\"bg-gray-50 rounded px-2 py-1\">\n                          <p className=\"text-xs text-gray-600\">Win Rate</p>\n                          <p className=\"text-sm font-semibold text-gray-900\">\n                            {trader.win_rate.toFixed(1)}%\n                          </p>\n                        </div>\n                        <div className=\"bg-gray-50 rounded px-2 py-1\">\n                          <p className=\"text-xs text-gray-600\">Trades</p>\n                          <p className=\"text-sm font-semibold text-gray-900\">\n                            {trader.total_trades}\n                          </p>\n                        </div>\n                      </div>\n                    </motion.button>\n                  ))\n                ) : (\n                  <div className=\"p-6 text-center text-gray-500\">\n                    <UserGroupIcon className=\"h-12 w-12 mx-auto mb-3 text-gray-400\" />\n                    <p>No traders followed yet</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Signals Feed */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <h2 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n                    <ChartBarIcon className=\"h-5 w-5 mr-2\" />\n                    Trading Signals\n                    {selectedTrader && (\n                      <span className=\"ml-2 text-sm font-normal text-gray-600\">\n                        from {selectedTrader}\n                      </span>\n                    )}\n                  </h2>\n                  <div className=\"flex space-x-2\">\n                    {[\"1h\", \"24h\", \"7d\"].map((filter) => (\n                      <button\n                        key={filter}\n                        onClick={() => setTimeFilter(filter)}\n                        className={`px-3 py-1 rounded text-sm font-medium ${\n                          timeFilter === filter\n                            ? \"bg-blue-100 text-blue-700\"\n                            : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\n                        }`}\n                      >\n                        {filter}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"divide-y divide-gray-200 max-h-[600px] overflow-y-auto\">\n                {signalsLoading ? (\n                  <div className=\"p-8 text-center\">\n                    <ArrowPathIcon className=\"h-8 w-8 text-blue-600 animate-spin mx-auto mb-3\" />\n                    <p className=\"text-gray-600\">Loading signals...</p>\n                  </div>\n                ) : filteredSignals && filteredSignals.length > 0 ? (\n                  filteredSignals.map((signal, index) => (\n                    <motion.div\n                      key={signal.id}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3, delay: index * 0.05 }}\n                      className=\"px-6 py-4 hover:bg-gray-50\"\n                    >\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-3 mb-2\">\n                            <span\n                              className={`px-3 py-1 rounded-full text-sm font-semibold ${getActionBadgeColor(\n                                signal.action\n                              )}`}\n                            >\n                              {signal.action}\n                            </span>\n                            <h3 className=\"text-xl font-bold text-gray-900\">\n                              {signal.symbol}\n                            </h3>\n                            {signal.entry_price && (\n                              <span className=\"text-sm text-gray-600\">\n                                @ ${signal.entry_price.toFixed(2)}\n                              </span>\n                            )}\n                          </div>\n\n                          <div className=\"flex items-center space-x-4 mb-2\">\n                            <p className=\"text-sm font-medium text-gray-700\">\n                              by {signal.trader_name}\n                            </p>\n                            <span\n                              className={`px-2 py-0.5 rounded text-xs font-medium border ${getPlatformBadgeColor(\n                                signal.platform\n                              )}`}\n                            >\n                              {signal.platform}\n                            </span>\n                          </div>\n\n                          <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                            <div className=\"flex items-center\">\n                              <ClockIcon className=\"h-4 w-4 mr-1\" />\n                              {new Date(signal.time).toLocaleString()}\n                            </div>\n                            <div className=\"flex items-center\">\n                              <ChartBarIcon className=\"h-4 w-4 mr-1\" />\n                              {(signal.confidence * 100).toFixed(0)}% confidence\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Confidence Bar */}\n                        <div className=\"ml-4\">\n                          <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                            <div\n                              className={`h-2 rounded-full ${\n                                signal.confidence >= 0.8\n                                  ? \"bg-green-600\"\n                                  : signal.confidence >= 0.6\n                                  ? \"bg-yellow-600\"\n                                  : \"bg-red-600\"\n                              }`}\n                              style={{ width: `${signal.confidence * 100}%` }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </motion.div>\n                  ))\n                ) : (\n                  <div className=\"p-12 text-center text-gray-500\">\n                    <ChartBarIcon className=\"h-16 w-16 mx-auto mb-4 text-gray-400\" />\n                    <p className=\"font-medium\">No signals found</p>\n                    <p className=\"text-sm mt-1\">\n                      {selectedTrader\n                        ? \"Try selecting a different trader or time range\"\n                        : \"Start following traders to see their signals\"}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"0EAAA,IAAA,EAAA,EAAA,CAAA,CAAA,aAwBiC,EAAA,UAAgB,CAvBjD,AAuBkD,SAvBzC,AAAc,OACrB,CAAK,CAuBQ,QAtBb,CAAO,CACP,GAAG,EACJ,CAAE,CAAM,EACP,OAAoB,AAAb,EAAa,SAAF,IAAqB,CAAC,MAAO,OAAO,MAAM,CAAC,CAC3D,MAAO,6BACP,KAAM,OACN,QAAS,YACT,YAAa,IACb,OAAQ,eACR,cAAe,OACf,YAAa,OACb,IAAK,EACL,kBAAmB,CACrB,EAAG,GAAQ,EAAqB,EAAA,IAAb,SAAgC,CAAC,CAAtB,OAA+B,CAC3D,GAAI,CACN,EAAG,GAAS,KAAmB,CAAb,CAAa,UAAF,GAAqB,CAAC,OAAQ,CACzD,cAAe,QACf,eAAgB,QAChB,EAAG,yKACL,GACF,0DCvBA,IAAA,EAAA,EAAA,CAAA,CAAA,aAwBiC,EAAA,UAAgB,CAvBjD,AAuBkD,SAvBzC,AAAU,OACjB,CAAK,CAuBQ,QAtBb,CAAO,CACP,GAAG,EACJ,CAAE,CAAM,EACP,OAAO,AAAa,EAAA,SAAF,IAAqB,CAAC,MAAO,OAAO,MAAM,CAAC,CAC3D,MAAO,6BACP,KAAM,OACN,QAAS,YACT,YAAa,IACb,OAAQ,eACR,cAAe,OACf,YAAa,OACb,IAAK,EACL,kBAAmB,CACrB,EAAG,GAAQ,EAAqB,EAAA,IAAb,SAAgC,CAAC,CAAtB,OAA+B,CAC3D,GAAI,CACN,EAAG,GAAS,KAAmB,CAAb,CAAa,UAAF,GAAqB,CAAC,OAAQ,CACzD,cAAe,QACf,eAAgB,QAChB,EAAG,kDACL,GACF,2BCnBC,EAAA,CAAA,CAAA,qHAED,IAAA,EAAA,EAAA,CAAA,CAAA,OAEA,IAAM,EAAe,QAAQ,GAAG,CAAC,mBAAmB,EAAI,wBA6I3C,EAAM,IA5EnB,AA4EuB,MA5EjB,AACI,OAER,AAFwB,aAEZ,EAAkB,CAAY,CAAE,CAC1C,IAAI,CAAC,OAAO,CAAG,CACjB,CAEA,MAAc,QACZ,CAAgB,CAChB,CAAqB,CACT,CACZ,IAAM,EAAM,CAAA,EAAG,IAAI,CAAC,OAAO,CAAA,EAAG,EAAA,CAAU,CAExC,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,EAAK,CAChC,QAAS,CACP,eAAgB,mBAChB,GAAG,GAAS,OACd,AADqB,EAErB,GAAG,CAAO,AACZ,GAEA,GAAI,CAAC,EAAS,EAAE,CACd,CADgB,KACV,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAG1D,OAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CAEd,MADA,QAAQ,KAAK,CAAC,CAAC,oBAAoB,EAAE,EAAA,CAAU,CAAE,GAC3C,CACR,CACF,CAGA,MAAM,iBAAyC,CAC7C,OAAO,IAAI,CAAC,OAAO,CAAe,qBACpC,CAEA,MAAM,kBAA2C,CAC/C,OAAO,IAAI,CAAC,OAAO,CAAgB,qBACrC,CAEA,MAAM,cAIH,CACD,OAAO,IAAI,CAAC,OAAO,CAAC,qBAAsB,CAAE,OAAQ,MAAO,EAC7D,CAGA,MAAM,kBAA4C,CAChD,OAAO,IAAI,CAAC,OAAO,CAAiB,sBACtC,CAEA,MAAM,oBAAwC,CAC5C,OAAO,IAAI,CAAC,OAAO,CAAW,eAChC,CAGA,MAAM,WAA8B,CAClC,OAAO,IAAI,CAAC,OAAO,CAAU,cAC/B,CAGA,MAAM,qBAAiD,CACrD,OAAO,IAAI,CAAC,OAAO,CAAmB,yBACxC,CAGA,MAAM,aAA4D,CAChE,OAAO,IAAI,CAAC,OAAO,CAAC,IACtB,CACF,EAMa,EAAkB,KAC7B,GAAM,CAAC,EAAM,EAAQ,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAsB,MAChD,CAAC,EAAS,EAAW,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GACjC,CAAC,EAAO,EAAS,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAgB,MAE5C,EAAY,UAChB,GAAI,CACF,GAAW,GACX,IAAM,EAAS,MAAM,EAAI,eAAe,GACxC,EAAQ,GACR,EAAS,KACX,CAAE,MAAO,EAAK,CACZ,EAAS,aAAe,MAAQ,EAAI,OAAO,CAAG,gBAChD,QAAU,CACR,GAAW,EACb,CACF,EAMA,MAJA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,GACF,EAAG,EAAE,EAEE,MAAE,EAAM,gBAAS,EAAO,QAAS,CAAU,CACpD,EAEa,EAAmB,KAC9B,GAAM,CAAC,EAAM,EAAQ,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAgB,EAAE,EAC5C,CAAC,EAAS,EAAW,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GACjC,CAAC,EAAO,EAAS,CAAG,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAwB,MAE5C,EAAY,UAChB,GAAI,CACF,GAAW,GACX,IAAM,EAAS,MAAM,EAAI,gBAAgB,GACzC,EAAQ,GACR,EAAS,KACX,CAAE,MAAO,EAAK,CACZ,EAAS,aAAe,MAAQ,EAAI,OAAO,CAAG,gBAChD,QAAU,CACR,GAAW,EACb,CACF,EAMA,MAJA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,GACF,EAAG,EAAE,EAEE,MAAE,UAAM,QAAS,EAAO,QAAS,CAAU,CACpD,EAEa,EAAmB,KAC9B,GAAM,CAAC,EAAM,EAAQ,CAAG,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAyB,EAAE,EAC7C,CAAC,EAAS,EAAW,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GACjC,CAAC,EAAO,EAAS,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAgB,MAE5C,EAAY,UAChB,GAAI,CACF,GAAW,GACX,IAAM,EAAS,MAAM,EAAI,gBAAgB,GACzC,EAAQ,GACR,EAAS,KACX,CAAE,MAAO,EAAK,CACZ,EAAS,aAAe,MAAQ,EAAI,OAAO,CAAG,gBAChD,QAAU,CACR,GAAW,EACb,CACF,EAMA,MAJA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,GACF,EAAG,EAAE,EAEE,MAAE,UAAM,QAAS,EAAO,QAAS,CAAU,CACpD,EAEa,EAAsB,KACjC,GAAM,CAAC,EAAM,EAAQ,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAA0B,MACpD,CAAC,EAAS,EAAW,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GACjC,CAAC,EAAO,EAAS,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAgB,MAE5C,EAAY,UAChB,GAAI,CACF,GAAW,GACX,IAAM,EAAS,MAAM,EAAI,mBAAmB,GAC5C,EAAQ,GACR,EAAS,KACX,CAAE,MAAO,EAAK,CACZ,EAAS,aAAe,MAAQ,EAAI,OAAO,CAAG,gBAChD,QAAU,CACR,GAAW,EACb,CACF,EAMA,MAJA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,GACF,EAAG,EAAE,EAEE,MAAE,UAAM,QAAS,EAAO,QAAS,CAAU,CACpD,8DC1PA,IAAA,EAAA,EAAA,CAAA,CAAA,aAwBiC,EAAA,UAAgB,CAvBjD,AAuBkD,SAvBzC,AAAe,OACtB,CAAK,CAuBQ,QAtBb,CAAO,CACP,GAAG,EACJ,CAAE,CAAM,EACP,OAAO,AAAa,EAAA,SAAF,IAAqB,CAAC,MAAO,OAAO,MAAM,CAAC,CAC3D,MAAO,6BACP,KAAM,OACN,QAAS,YACT,YAAa,IACb,OAAQ,eACR,cAAe,OACf,YAAa,OACb,IAAK,EACL,kBAAmB,CACrB,EAAG,GAAQ,EAAqB,EAAA,IAAb,SAAgC,CAAC,CAAtB,OAA+B,CAC3D,GAAI,CACN,EAAG,GAAS,KAAmB,CAAb,CAAa,UAAF,GAAqB,CAAC,OAAQ,CACzD,cAAe,QACf,eAAgB,QAChB,EAAG,meACL,GACF,mECrBA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,OAOA,EAAA,EAAA,CAAA,CAAA,OAce,SAAS,IACtB,GAAM,CACJ,KAAM,CAAO,CACb,QAAS,CAAc,CACvB,QAAS,CAAc,CACxB,CAAG,CAAA,EAAA,EAAA,gBAAA,AAAgB,IACd,CAAC,EAAS,EAAW,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAW,EAAE,EAC7C,CAAC,EAAgB,EAAkB,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,IAC/C,CAAC,EAAgB,EAAkB,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAgB,MAC9D,CAAC,EAAY,EAAc,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAS,OAErD,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,GACF,EAAG,EAAE,EAEL,IAAM,EAAc,UAClB,GAAI,CACF,GAAkB,GAClB,IAAM,EAAW,MAAM,MAAM,qCACvB,EAAO,MAAM,EAAS,IAAI,GAChC,EAAW,EACb,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,0BAA2B,EAC3C,QAAU,CACR,GAAkB,EACpB,CACF,EAEM,EAAkB,GAAS,OAAO,AAAC,IACvC,GAAI,GAAkB,EAAO,WAAW,GAAK,EAAgB,MAAO,GAEpE,IAAM,EAAa,IAAI,KAAK,EAAO,IAAI,EAAE,OAAO,GAE1C,EAAY,CADN,AACO,KADF,GAAG,GACK,CAAA,CAAU,CAAK,GAAD,IAAQ,IAE3C,CAFgD,AAEjC,EAFmC,UAE3B,IAAY,GAAG,CACvB,MAD8B,EAC7C,KAAwB,EAAY,EAAA,CAAA,GAAI,CACzB,MADgC,CAC/C,IAAuB,GAAY,GAAA,CAAA,CAGzC,CAH8C,EAKxC,EAAwB,AAAC,GALsB,CAMnD,OAAQ,EAAS,WAAW,IAC1B,IAAK,UACH,MAAO,2CACT,KAAK,SACH,MAAO,iDACT,KAAK,UACH,MAAO,iDACT,SACE,MAAO,2CACX,CACF,EAeA,MACE,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,oCAEb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,uDACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,uDACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,8CACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WACC,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,4CAAmC,qBAGjD,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,sCAA6B,sEAI5C,CAAA,EAAA,EAAA,IAAA,EAAC,SAAA,CACC,QAAS,KACP,IACA,GACF,EACA,SAAU,GAAkB,EAC5B,UAAU,gHAEV,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAa,CAAA,CACZ,UAAW,CAAC,aAAa,EACvB,GAAkB,EAAiB,eAAiB,GAAA,CACpD,GACF,oBAOV,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,uDACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,kDAEb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,yBACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iEACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,8CACb,CAAA,EAAA,EAAA,IAAA,EAAC,KAAA,CAAG,UAAU,kEACZ,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAa,CAAA,CAAC,UAAU,iBAAiB,qBACvB,EAAQ,MAAM,CAAC,SAGtC,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,kEACZ,EACC,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,2BACb,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAa,CAAA,CAAC,UAAU,iDAEzB,EAAQ,MAAM,CAAG,EACnB,EAAQ,GAAG,CAAC,CAAC,EAAQ,IACnB,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,MAAM,CAAC,MAAM,CAAA,CAEZ,QAAS,CAAE,QAAS,EAAG,EAAG,CAAC,EAAG,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,GAAK,MAAe,IAAR,CAAa,EACjD,QAAS,IACP,EACE,IAAmB,EAAO,IAAI,CAAG,KAAO,EAAO,IAAI,EAGvD,UAAW,CAAC,8DAA8D,EACxE,IAAmB,EAAO,IAAI,CAAG,aAAe,GAAA,CAChD,WAEF,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,4CACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,mBACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,6CACb,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,uCACV,EAAO,IAAI,GAEb,EAAO,QAAQ,EACd,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,cAAc,CAAA,CAAC,UAAU,6BAG9B,CAAA,EAAA,EAAA,IAAA,EAAC,IAAA,CAAE,UAAU,uCAA6B,IACtC,EAAO,QAAQ,IAEnB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,UAAW,CAAC,+CAA+C,EAAE,EAC3D,EAAO,QAAQ,EAAA,CACd,UAEF,EAAO,QAAQ,GAElB,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,UAAU,kCACb,EAAO,SAAS,CAAC,cAAc,GAAG,wBAK3C,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wCACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,yCACb,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,iCAAwB,aACrC,CAAA,EAAA,EAAA,IAAA,EAAC,IAAA,CAAE,UAAU,gDACV,EAAO,QAAQ,CAAC,OAAO,CAAC,GAAG,UAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,yCACb,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,iCAAwB,WACrC,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,+CACV,EAAO,YAAY,WAlDrB,EAAO,EAAE,GAyDlB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,0CACb,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAa,CAAA,CAAC,UAAU,yCACzB,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,UAAE,sCAQb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,yBACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iEACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,8CACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,8CACb,CAAA,EAAA,EAAA,IAAA,EAAC,KAAA,CAAG,UAAU,kEACZ,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,YAAY,CAAA,CAAC,UAAU,iBAAiB,kBAExC,GACC,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,UAAU,mDAAyC,QACjD,QAIZ,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,0BACZ,CAAC,KAAM,MAAO,KAAK,CAAC,GAAG,CAAE,AAAD,GACvB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAEC,QAAS,IAAM,EAAc,GAC7B,UAAW,CAAC,sCAAsC,EAChD,IAAe,EACX,4BACA,8CAAA,CACJ,UAED,GARI,WAef,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,kEACZ,EACC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,4BACb,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAa,CAAA,CAAC,UAAU,oDACzB,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,yBAAgB,0BAE7B,GAAmB,EAAgB,MAAM,CAAG,EAC9C,EAAgB,GAAG,CAAC,CAAC,EAAQ,IAC3B,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAC,GAAG,CAAA,CAET,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,GAAK,MAAe,IAAR,CAAa,EACjD,UAAU,sCAEV,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,6CACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,mBACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,6CACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,UAAW,CAAC,6CAA6C,EAAE,CAtL3D,AAAC,IAC3B,OAAQ,EAAO,WAAW,IACxB,IAAK,OACL,IAAK,MACH,MAAO,6BACT,KAAK,QACL,IAAK,OACH,MAAO,yBACT,SACE,MAAO,2BACX,EACF,EA4K8B,EAAO,MAAM,EAAA,CACZ,UAEF,EAAO,MAAM,GAEhB,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,2CACX,EAAO,MAAM,GAEf,EAAO,WAAW,EACjB,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,UAAU,kCAAwB,MAClC,EAAO,WAAW,CAAC,OAAO,CAAC,SAKrC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,6CACb,CAAA,EAAA,EAAA,IAAA,EAAC,IAAA,CAAE,UAAU,8CAAoC,MAC3C,EAAO,WAAW,IAExB,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,UAAW,CAAC,+CAA+C,EAAE,EAC3D,EAAO,QAAQ,EAAA,CACd,UAEF,EAAO,QAAQ,MAIpB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,8DACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,8BACb,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,SAAS,CAAA,CAAC,UAAU,iBACpB,IAAI,KAAK,EAAO,IAAI,EAAE,cAAc,MAEvC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,8BACb,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,YAAY,CAAA,CAAC,UAAU,iBACvB,CAAC,AAAoB,MAAb,UAAU,AAAG,CAAG,CAAE,OAAO,CAAC,GAAG,wBAM5C,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,gBACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,6CACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,UAAW,CAAC,iBAAiB,EAC3B,EAAO,UAAU,EAAI,GACjB,eACA,EAAO,UAAU,EAAI,GACrB,gBACA,aAAA,CACJ,CACF,MAAO,CAAE,MAAO,CAAA,EAAuB,IAApB,EAAO,UAAU,CAAO,CAAC,CAAC,AAAC,YA9DjD,EAAO,EAAE,GAsElB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,2CACb,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,YAAY,CAAA,CAAC,UAAU,yCACxB,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,uBAAc,qBAC3B,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,wBACV,EACG,iDACA,kEAW1B","ignoreList":[0,1,3]}